generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  CUSTOMER
  ADMIN
  SELLER
}

model User {
  id             Int       @id @default(autoincrement())
  user_name      String?   @unique
  first_name     String?
  last_name      String?
  email          String?   @unique
  phone          String    @unique
  role           UserRole  @default(CUSTOMER)
  email_verified Boolean   @default(false)
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  product        Product[]
  // orders         Order[]
}

model Product {
  id                  Int               @id @default(autoincrement())
  title               String
  title_eng           String
  slug                String            @unique
  price               Int?
  discount_percentage Float?
  variants            Variant[]
  description         String
  category            ProductCategory[]
  images              ProductImage[]
  created_by          Int
  author              User              @relation(fields: [created_by], references: [id])
  created_at          DateTime          @default(now())
  updated_at          DateTime          @updatedAt
  // orders      OrderProduct[]
}

model Variant {
  id                   Int                @id @default(autoincrement())
  attributes           Json
  quantity             Int                @default(0)
  price                Int
  discount_percentage  Float?
  price_after_discount Int                @default(0)
  productId            Int
  product              Product            @relation(fields: [productId], references: [id])
  VariantAttribute     VariantAttribute[]
}

model VariantAttribute {
  id        Int     @id @default(autoincrement())
  name      String
  value     String
  variantId Int
  variant   Variant @relation(fields: [variantId], references: [id])
}

model ProductCategory {
  id        Int               @id @default(autoincrement())
  title     String
  title_eng String?
  url       String
  productId Int?
  product   ProductCategory?  @relation("CategoryHierarchy", fields: [productId], references: [id])
  children  ProductCategory[] @relation("CategoryHierarchy")
  products  Product[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

// model Order {
//     id               Int            @id @unique @default(autoincrement())
//     customer_id      Int
//     customer         User           @relation(fields: [customer_id], references: [id])
//     products         OrderProduct[]
//     status_order     String
//     delivery_address String
//     payment_method   String
//     amount_paid      String
//     order_date       DateTime       @default(now())
// }

// model OrderProduct {
//     id         Int     @id @unique @default(autoincrement())
//     order_id   Int
//     product_id Int
//     quantity   Int
//     order      Order   @relation(fields: [order_id], references: [id])
//     product    Product @relation(fields: [product_id], references: [id])
// }
